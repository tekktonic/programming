     1                                  [bits 32]
     2                                  %define stdout 1
     3                                  %define syscall int 0x80
     4                                  section .bss
     5 00000000 <res 00000004>          	x resd 1			;2 words
     6 00000004 <res 00000002>          	i resb 2
     7 00000006 <res 00000004>          	spaces resd 1
     8                                  
     9                                  section .data
    10 00000000 66697A7A00              	fizz db "fizz", $00
    11                                  	fizz_len equ $ - fizz
    12 00000005 62757A7A                	buzz db "buzz"
    13                                  	buzz_len equ $ - buzz
    14 00000009 2000                    	space db " ", $00
    15 0000000B 0A00                    	newline db $0A, $00
    16                                  
    17                                  section .text
    18                                  	global main
    19                                  	global _start
    20                                  
    21                                  main:
    22                                  _start:
    23 00000000 BB05000000              	mov ebx, 5
    24 00000005 E849000000              	call spaceit
    25 0000000A B804000000              	mov eax, 4
    26 0000000F BB01000000              	mov ebx, stdout
    27 00000014 B9[00000000]            	mov ecx, fizz
    28 00000019 BA05000000              	mov edx, fizz_len
    29 0000001E CD80                    	syscall
    30 00000020 B804000000              	mov eax, 4
    31 00000025 BB01000000              	mov ebx, stdout
    32 0000002A B9[0B000000]            	mov ecx, newline
    33 0000002F BA02000000              	mov edx, 2
    34 00000034 CD80                    	syscall
    35                                  	
    36 00000036 B801000000              	mov eax, 1
    37 0000003B BB00000000              	mov ebx,0
    38 00000040 CD80                    	syscall
    39                                  
    40                                  
    41                                  
    42                                  print:
    43 00000042 50                      	push eax
    44 00000043 53                      	push ebx
    45                                  	
    46 00000044 B804000000              	mov eax, 4
    47 00000049 BB01000000              	mov ebx, stdout
    48 0000004E CD80                    	syscall
    49 00000050 5B                      	pop ebx
    50 00000051 58                      	pop eax
    51                                  
    52 00000052 C3                      	ret
    53                                  spaceit:
    54 00000053 50                      	push eax
    55 00000054 B800000000              	mov eax, 0
    56                                  spaceit_loop:	
    57 00000059 39C3                    	cmp ebx,eax
    58 0000005B 7414                    	je spaceit_end
    59 0000005D B9[09000000]            	mov ecx, space
    60 00000062 BA01000000              	mov edx, 1
    61 00000067 E8D6FFFFFF              	call print
    62 0000006C 83EB01                  	sub ebx,1
    63 0000006F EBE8                    	jmp spaceit_loop
    64                                  spaceit_end:
    65 00000071 5B                      	pop ebx
    66 00000072 C3                      	ret
